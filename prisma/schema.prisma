// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String    @unique
  username      String    @unique
  email         String
  password      String
  status        Boolean?  @default(true)
  posts         Post[]
  comments      Comment[]
  profile       Profile   @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  profile_id    String    @db.ObjectId

  created_at    DateTime  @default(now())
  updated_at    DateTime  @default(now())

  @@map("users")
}

model Comment {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  post          Post      @relation(fields: [post_title], references: [title], onDelete: Cascade)
  author        User      @relation(fields: [user_username], references: [username], onDelete: Cascade)
  content       String
  user_username String
  post_title    String    
 
  created_at    DateTime  @default(now())
  updated_at    DateTime  @default(now())

  @@map("comments")
}

model Profile {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  user          User[]
  bio           String      

  @@map("profiles")
}

model Post {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String    @unique
  content       String
  published     Boolean?  @default(false)
  comments      Comment[]
  category      Category  @relation(fields: [category_id], references: [id])
  category_id   String    @db.ObjectId
  author        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       String    @db.ObjectId

  @@map("posts")
}

model Category {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String    @unique
  posts         Post[]

  @@map("categories")
}
